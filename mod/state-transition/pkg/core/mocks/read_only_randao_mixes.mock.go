// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	common "github.com/berachain/beacon-kit/mod/primitives/pkg/common"

	mock "github.com/stretchr/testify/mock"
)

// ReadOnlyRandaoMixes is an autogenerated mock type for the ReadOnlyRandaoMixes type
type ReadOnlyRandaoMixes struct {
	mock.Mock
}

type ReadOnlyRandaoMixes_Expecter struct {
	mock *mock.Mock
}

func (_m *ReadOnlyRandaoMixes) EXPECT() *ReadOnlyRandaoMixes_Expecter {
	return &ReadOnlyRandaoMixes_Expecter{mock: &_m.Mock}
}

// GetRandaoMixAtIndex provides a mock function with given fields: _a0
func (_m *ReadOnlyRandaoMixes) GetRandaoMixAtIndex(_a0 uint64) (common.Bytes32, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetRandaoMixAtIndex")
	}

	var r0 common.Bytes32
	var r1 error
	if rf, ok := ret.Get(0).(func(uint64) (common.Bytes32, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(uint64) common.Bytes32); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(common.Bytes32)
		}
	}

	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRandaoMixAtIndex'
type ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call struct {
	*mock.Call
}

// GetRandaoMixAtIndex is a helper method to define mock.On call
//   - _a0 uint64
func (_e *ReadOnlyRandaoMixes_Expecter) GetRandaoMixAtIndex(_a0 interface{}) *ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call {
	return &ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call{Call: _e.mock.On("GetRandaoMixAtIndex", _a0)}
}

func (_c *ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call) Run(run func(_a0 uint64)) *ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call) Return(_a0 common.Bytes32, _a1 error) *ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call) RunAndReturn(run func(uint64) (common.Bytes32, error)) *ReadOnlyRandaoMixes_GetRandaoMixAtIndex_Call {
	_c.Call.Return(run)
	return _c
}

// NewReadOnlyRandaoMixes creates a new instance of ReadOnlyRandaoMixes. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewReadOnlyRandaoMixes(t interface {
	mock.TestingT
	Cleanup(func())
}) *ReadOnlyRandaoMixes {
	mock := &ReadOnlyRandaoMixes{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
